{"mappings":"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","sources":["src/index.js","src/lib/diff.js"],"sourcesContent":["import { diff, diffStylesSetStyle } from \"./lib/diff\";\n\nexport { diff, diffStylesSetStyle };\n","const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nclass diffTracker {\n  constructor() {\n    this.glyphs = null;\n    this.sprite = null;\n    this.sources = [];\n    this.layers = [];\n    this.layerProps = {};\n  }\n\n  changeGlyphs(change) {\n    this.glyphs = { change: change };\n  }\n\n  changeSprite(change) {\n    this.sprite = { change: change };\n  }\n\n  changeSource(source, change) {\n    this.sources.push({ source: source, change: change });\n  }\n\n  changeLayer(layer, change) {\n    this.layers.push({ layer: layer, change: change });\n  }\n\n  changeLayerProp(layer, change) {\n    if (!this.layerProps[layer]) this.layerProps[layer] = [change];\n    else this.layerProps[layer].push(change);\n  }\n}\nconst operations = {\n  /*\n   * { command: 'setStyle', args: [stylesheet] }\n   */\n  setStyle: 'setStyle',\n\n  /*\n   * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n   */\n  addLayer: 'addLayer',\n\n  /*\n   * { command: 'removeLayer', args: ['layerId'] }\n   */\n  removeLayer: 'removeLayer',\n\n  moveLayer: 'moveLayer',\n\n  /*\n   * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n   */\n  setPaintProperty: 'setPaintProperty',\n\n  /*\n   * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n   */\n  setLayoutProperty: 'setLayoutProperty',\n\n  /*\n   * { command: 'setFilter', args: ['layerId', filter] }\n   */\n  setFilter: 'setFilter',\n\n  /*\n   * { command: 'addSource', args: ['sourceId', source] }\n   */\n  addSource: 'addSource',\n\n  /*\n   * { command: 'removeSource', args: ['sourceId'] }\n   */\n  removeSource: 'removeSource',\n\n  /*\n   * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n   */\n  setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n  /*\n   * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n   */\n  setLayerZoomRange: 'setLayerZoomRange',\n\n  /*\n   * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n   */\n  setLayerProperty: 'setLayerProperty',\n\n  /*\n   * { command: 'setCenter', args: [[lon, lat]] }\n   */\n  setCenter: 'setCenter',\n\n  /*\n   * { command: 'setZoom', args: [zoom] }\n   */\n  setZoom: 'setZoom',\n\n  /*\n   * { command: 'setBearing', args: [bearing] }\n   */\n  setBearing: 'setBearing',\n\n  /*\n   * { command: 'setPitch', args: [pitch] }\n   */\n  setPitch: 'setPitch',\n\n  /*\n   * { command: 'setSprite', args: ['spriteUrl'] }\n   */\n  setSprite: 'setSprite',\n\n  /*\n   * { command: 'setGlyphs', args: ['glyphsUrl'] }\n   */\n  setGlyphs: 'setGlyphs',\n\n  /*\n   * { command: 'setTransition', args: [transition] }\n   */\n  setTransition: 'setTransition',\n\n  /*\n   * { command: 'setLighting', args: [lightProperties] }\n   */\n  setLight: 'setLight',\n\n  /*\n   * { command: 'setTerrain', args: [terrainProperties] }\n   */\n  setTerrain: 'setTerrain',\n\n  /*\n   *  { command: 'setFog', args: [fogProperties] }\n   */\n  setFog: 'setFog',\n\n  /*\n   *  { command: 'setProjection', args: [projectionProperties] }\n   */\n  setProjection: 'setProjection'\n};\n\nfunction addSource(sourceId, after, commands) {\n  commands.push({\n    command: operations.addSource,\n    args: [sourceId, after[sourceId]]\n  });\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n  commands.push({ command: operations.removeSource, args: [sourceId] });\n  sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n  removeSource(sourceId, commands, sourcesRemoved);\n  addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n  let prop;\n  for (prop in before[sourceId]) {\n    if (!before[sourceId].hasOwnProperty(prop)) continue;\n    if (\n      prop !== 'data' &&\n      !isEqual(before[sourceId][prop], after[sourceId][prop])\n    ) {\n      return false;\n    }\n  }\n  for (prop in after[sourceId]) {\n    if (!after[sourceId].hasOwnProperty(prop)) continue;\n    if (\n      prop !== 'data' &&\n      !isEqual(before[sourceId][prop], after[sourceId][prop])\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved, differ) {\n  before = before || {};\n  after = after || {};\n\n  let sourceId;\n\n  // look for sources to remove\n  for (sourceId in before) {\n    if (!before.hasOwnProperty(sourceId)) continue;\n    if (!after.hasOwnProperty(sourceId)) {\n      differ.changeSource(sourceId, { command: 'removeSource' });\n      removeSource(sourceId, commands, sourcesRemoved);\n    }\n  }\n\n  // look for sources to add/update\n  for (sourceId in after) {\n    if (!after.hasOwnProperty(sourceId)) continue;\n\n    // add sources\n    if (!before.hasOwnProperty(sourceId)) {\n      differ.changeSource(sourceId, { command: 'addSource' });\n      addSource(sourceId, after, commands);\n    }\n    // update sources\n    else if (!isEqual(before[sourceId], after[sourceId])) {\n      differ.changeSource(sourceId, { command: 'updateSource' });\n      if (\n        before[sourceId].type === 'geojson' &&\n        after[sourceId].type === 'geojson' &&\n        canUpdateGeoJSON(before, after, sourceId)\n      ) {\n        commands.push({\n          command: operations.setGeoJSONSourceData,\n          args: [sourceId, after[sourceId].data]\n        });\n      } else {\n        // no update command, must remove then add\n        updateSource(sourceId, after, commands, sourcesRemoved);\n      }\n    }\n  }\n}\n\nfunction diffLayerPropertyChanges(\n  before,\n  after,\n  commands,\n  layerId,\n  klass,\n  command,\n  differ\n) {\n  before = before || {};\n  after = after || {};\n\n  let prop;\n\n  for (prop in before) {\n    if (!before.hasOwnProperty(prop)) continue;\n    if (!isEqual(before[prop], after[prop])) {\n      const cmd = {\n        command,\n        args: [prop, after[prop], before[prop], klass],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n  }\n  for (prop in after) {\n    if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n    if (!isEqual(before[prop], after[prop])) {\n      const cmd = {\n        command,\n        args: [prop, after[prop], before[prop], klass],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n  }\n}\n\nfunction pluckId(layer) {\n  return layer.id;\n}\nfunction indexById(group, layer) {\n  group[layer.id] = layer;\n  return group;\n}\n\nfunction diffLayers(before, after, commands, differ) {\n  before = before || [];\n  after = after || [];\n\n  // order of layers by id\n  const beforeOrder = before.map(pluckId);\n  const afterOrder = after.map(pluckId);\n\n  // index of layer by id\n  const beforeIndex = before.reduce(indexById, {});\n  const afterIndex = after.reduce(indexById, {});\n\n  // track order of layers as if they have been mutated\n  const tracker = beforeOrder.slice();\n\n  // layers that have been added do not need to be diffed\n  const clean = Object.create(null);\n\n  let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n  // remove layers\n  for (i = 0, d = 0; i < beforeOrder.length; i++) {\n    layerId = beforeOrder[i];\n    // detect removed layer\n    if (!afterIndex.hasOwnProperty(layerId)) {\n      commands.push({ command: operations.removeLayer, args: [layerId] });\n      differ.changeLayer(layerId, { command: 'removeLayer' });\n      tracker.splice(tracker.indexOf(layerId, d), 1);\n    } else {\n      // limit where in tracker we need to look for a match\n      d++;\n    }\n  }\n\n  // add/reorder layers\n  for (i = 0, d = 0; i < afterOrder.length; i++) {\n    // work backwards as insert is before an existing layer\n    layerId = afterOrder[afterOrder.length - 1 - i];\n\n    if (tracker[tracker.length - 1 - i] === layerId) continue;\n    var movingLayer = false;\n    if (beforeIndex.hasOwnProperty(layerId)) {\n      movingLayer = true;\n      // remove the layer before we insert at the correct position\n      commands.push({ command: operations.removeLayer, args: [layerId] });\n      tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n    } else {\n      // limit where in tracker we need to look for a match\n      d++;\n    }\n\n    // add layer at correct position\n    insertBeforeLayerId = tracker[tracker.length - i];\n    commands.push({\n      command: operations.addLayer,\n      args: [afterIndex[layerId], insertBeforeLayerId]\n    });\n    tracker.splice(tracker.length - i, 0, layerId);\n\n    if (movingLayer)\n      differ.changeLayer(layerId, {\n        command: 'moveLayer',\n        args: [insertBeforeLayerId]\n      });\n    else {\n      clean[layerId] = true;\n      differ.changeLayer(layerId, {\n        command: 'addLayer',\n        args: [afterIndex[layerId], insertBeforeLayerId]\n      });\n    }\n  }\n\n  // update layers\n  for (i = 0; i < afterOrder.length; i++) {\n    layerId = afterOrder[i];\n    beforeLayer = beforeIndex[layerId];\n    afterLayer = afterIndex[layerId];\n\n    // no need to update if previously added (new or moved)\n    if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n    // layout, paint, filter, minzoom, maxzoom\n    diffLayerPropertyChanges(\n      beforeLayer.layout,\n      afterLayer.layout,\n      commands,\n      layerId,\n      null,\n      operations.setLayoutProperty,\n      differ\n    );\n    diffLayerPropertyChanges(\n      beforeLayer.paint,\n      afterLayer.paint,\n      commands,\n      layerId,\n      null,\n      operations.setPaintProperty,\n      differ\n    );\n    if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n      const cmd = {\n        command: operations.setFilter,\n        args: ['filter', JSON.stringify(afterLayer.filter), beforeLayer.filter],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n\n    if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom)) {\n      const cmd = {\n        command: operations.setLayerZoomRange,\n        args: ['minzoom', afterLayer.minzoom, beforeLayer.minzoom],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n    if (!isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n      const cmd = {\n        command: operations.setLayerZoomRange,\n        args: ['maxzoom', afterLayer.maxzoom, beforeLayer.maxzoom],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n\n    // handle all other layer props, including paint.*\n    for (prop in beforeLayer) {\n      if (!beforeLayer.hasOwnProperty(prop)) continue;\n      if (\n        prop === 'layout' ||\n        prop === 'paint' ||\n        prop === 'filter' ||\n        prop === 'metadata' ||\n        prop === 'minzoom' ||\n        prop === 'maxzoom'\n      )\n        continue;\n      if (prop.indexOf('paint.') === 0) {\n        diffLayerPropertyChanges(\n          beforeLayer[prop],\n          afterLayer[prop],\n          commands,\n          layerId,\n          prop.slice(6),\n          operations.setPaintProperty,\n          differ\n        );\n      } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n        const cmd = {\n          command: operations.setLayerProperty,\n          args: [prop, afterLayer[prop], beforeLayer[prop]],\n          layer: layerId\n        };\n        commands.push(cmd);\n        differ.changeLayerProp(layerId, cmd);\n      }\n    }\n    for (prop in afterLayer) {\n      if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop))\n        continue;\n      if (\n        prop === 'layout' ||\n        prop === 'paint' ||\n        prop === 'filter' ||\n        prop === 'metadata' ||\n        prop === 'minzoom' ||\n        prop === 'maxzoom'\n      )\n        continue;\n      if (prop.indexOf('paint.') === 0) {\n        diffLayerPropertyChanges(\n          beforeLayer[prop],\n          afterLayer[prop],\n          commands,\n          layerId,\n          prop.slice(6),\n          operations.setPaintProperty\n        );\n      } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n        const cmd = {\n          command: operations.setLayerProperty,\n          args: [prop, afterLayer[prop], beforeLayer[prop]],\n          layer: layerId\n        };\n        commands.push(cmd);\n        differ.changeLayerProp(layerId, cmd);\n      }\n    }\n  }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nexport function diffStylesSetStyle(before, after) {\n  if (!before) return [{ command: operations.setStyle, args: [after] }];\n  const differ = new diffTracker();\n\n  let commands = [];\n\n  try {\n    // Handle changes to top-level properties\n    if (!isEqual(before.version, after.version)) {\n      return [{ command: operations.setStyle, args: [after] }];\n    }\n    if (!isEqual(before.center, after.center)) {\n      commands.push({ command: operations.setCenter, args: [after.center] });\n    }\n    if (!isEqual(before.zoom, after.zoom)) {\n      commands.push({ command: operations.setZoom, args: [after.zoom] });\n    }\n    if (!isEqual(before.bearing, after.bearing)) {\n      commands.push({ command: operations.setBearing, args: [after.bearing] });\n    }\n    if (!isEqual(before.pitch, after.pitch)) {\n      commands.push({ command: operations.setPitch, args: [after.pitch] });\n    }\n    if (!isEqual(before.sprite, after.sprite)) {\n      commands.push({ command: operations.setSprite, args: [after.sprite] });\n      differ.changeSprite({\n        command: 'setSprite',\n        args: [after.sprite, before.sprite]\n      });\n    }\n    if (!isEqual(before.glyphs, after.glyphs)) {\n      commands.push({ command: operations.setGlyphs, args: [after.glyphs] });\n      differ.changeGlyphs({\n        command: 'setGlyphs',\n        args: [after.glyphs, before.glyphs]\n      });\n    }\n    if (!isEqual(before.transition, after.transition)) {\n      commands.push({\n        command: operations.setTransition,\n        args: [after.transition]\n      });\n    }\n    if (!isEqual(before.light, after.light)) {\n      commands.push({ command: operations.setLight, args: [after.light] });\n    }\n    if (!isEqual(before.fog, after.fog)) {\n      commands.push({ command: operations.setFog, args: [after.fog] });\n    }\n    if (!isEqual(before.projection, after.projection)) {\n      commands.push({\n        command: operations.setProjection,\n        args: [after.projection]\n      });\n    }\n\n    // Handle changes to `sources`\n    // If a source is to be removed, we also--before the removeSource\n    // command--need to remove all the style layers that depend on it.\n    const sourcesRemoved = {};\n\n    // First collect the {add,remove}Source commands\n    const removeOrAddSourceCommands = [];\n    diffSources(\n      before.sources,\n      after.sources,\n      removeOrAddSourceCommands,\n      sourcesRemoved,\n      differ\n    );\n\n    commands = commands.concat(removeOrAddSourceCommands);\n\n    // Handle changes to `layers`\n    diffLayers(before.layers, after.layers, commands, differ);\n  } catch (e) {\n    // fall back to setStyle\n    console.warn('Unable to compute style diff:', e);\n    commands = [{ command: operations.setStyle, args: [after] }];\n  }\n\n  commands = detectMovedLayers(commands);\n\n  return differ;\n}\n\nfunction detectMovedLayers(commands) {\n  var output = [];\n  var blacklistAdds = [];\n\n  function findReaddedLayer(removalCommand) {\n    const targetId = removalCommand.args[0];\n    const match = commands.find(l => l.args?.[0]?.id === targetId);\n    if (match) {\n      blacklistAdds.push(targetId);\n    }\n    return match;\n  }\n\n  commands.forEach(c => {\n    if (c.command === 'removeLayer') {\n      const readded = findReaddedLayer(c);\n      if (readded) {\n        output.push({ command: 'moveLayer', args: readded.args });\n      } else output.push(c);\n    } else if (c.command !== 'addLayer' || !blacklistAdds.includes(c.args[0]))\n      output.push(c);\n  });\n\n  return output;\n}\n\n// Added this function to change the output format to be more helpful\nconst diffStyles = (before, after) => {\n  const originalDiff = diffStylesSetStyle(before, after);\n\n  const { layerProps, layers, sources, glyphs, sprite } = originalDiff;\n\n  // formatting for source additions and removals\n  const nextSources = sources.reduce((acc, s) => {\n    const { change, source } = s;\n\n    let type = change.command;\n\n    switch (type) {\n      case 'removeSource': {\n        type = 'remove';\n        break;\n      }\n      case 'addSource': {\n        type = 'add';\n        break;\n      }\n    }\n\n    acc[source] = type;\n\n    return acc;\n  }, {});\n\n  // formatting for layer additions, reorders, and removals\n  const nextLayers = layers.reduce((acc, l) => {\n    const { change, layer } = l;\n\n    let type = change.command;\n\n    switch (type) {\n      case 'removeLayer': {\n        type = 'remove';\n        break;\n      }\n      case 'addLayer': {\n        type = 'add';\n        break;\n      }\n      case 'moveLayer': {\n        type = 'move';\n        break;\n      }\n    }\n\n    acc[layer] = {\n      type,\n      ...(type === 'add' && {\n        layer: change?.args[0],\n        layerAbove: change?.args[1]\n      }),\n      ...(type === 'move' && { layerAbove: change?.args[0] })\n    };\n\n    return acc;\n  }, {});\n\n  // formatting for layer property changes\n  const nextLayerProps = Object.keys(layerProps).reduce((acc, layerId) => {\n    const nextLayerChanges = layerProps[layerId].reduce((accum, change) => {\n      const { command, args } = change;\n\n      let type = command;\n\n      switch (command) {\n        case 'setFilter': {\n          type = 'filter';\n          break;\n        }\n        // source & source-layer\n        case 'setLayerProperty': {\n          type = 'root';\n          break;\n        }\n        case 'setPaintProperty': {\n          type = 'paint';\n          break;\n        }\n        // min and max zoom\n        case 'setLayerZoomRange': {\n          type = 'minMaxZoom';\n          break;\n        }\n        case 'setLayoutProperty': {\n          type = 'layout';\n          break;\n        }\n      }\n\n      const [propertyId, currentValue, compareValue] = args;\n\n      // These are reversed out of the set style version of the diffing tool\n      const current = compareValue;\n      const compare = currentValue;\n\n      if (type === 'root' || type === 'minMaxZoom') {\n        accum[propertyId] = {\n          current,\n          compare\n        };\n      } else if (type === 'filter') {\n        accum[propertyId] = {\n          current,\n          // Not sure why this is stringified\n          compare: typeof compare === 'string' ? JSON.parse(compare) : compare\n        };\n      } else {\n        if (!accum[type]) {\n          accum[type] = {};\n        }\n        accum[type][propertyId] = {\n          current,\n          compare\n        };\n      }\n\n      return accum;\n    }, {});\n\n    acc[layerId] = nextLayerChanges;\n\n    return acc;\n  }, {});\n\n  let nextGlyphs;\n  if (glyphs?.change?.args) {\n    const [compareGlyph, currentGlyph] = glyphs?.change?.args;\n    nextGlyphs = { current: currentGlyph, compare: compareGlyph };\n  }\n\n  let nextSprite;\n  if (sprite?.change?.args) {\n    const [compareSprite, currentSprite] = sprite?.change?.args;\n    nextSprite = { current: currentSprite, compare: compareSprite };\n  }\n\n  return {\n    layerProps: nextLayerProps,\n    layers: nextLayers,\n    sources: nextSources,\n    glyphs: nextGlyphs,\n    sprite: nextSprite\n  };\n};\n\nexport const diff = diffStyles;\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}