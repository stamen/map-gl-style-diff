{"mappings":"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","sources":["src/index.js","src/lib/diff.js"],"sourcesContent":["import diff from \"./lib/diff\";\n\nexport { diff };\n","\nconst isEqual = (a,b) => (JSON.stringify(a) === JSON.stringify(b))\n\nclass diffTracker {\n\n\tconstructor(){\n\n        this.sources = [];\n\t\tthis.layers = [];\n\t\tthis.layerProps = {};\n\n\t}\n\n    changeSource(source, change) {\n        this.sources.push({source:source, change:change})\n    }\n\n\tchangeLayer(layer, change){\n\t\tthis.layers.push({layer:layer, change:change})\n\t}\n\n\tchangeLayerProp(layer, change){\n\t\tif (!this.layerProps[layer]) this.layerProps[layer] = [change];\n\t\telse this.layerProps[layer].push(change)\n\t}\n\n}\nconst operations = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    moveLayer: 'moveLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight',\n\n    /*\n     * { command: 'setTerrain', args: [terrainProperties] }\n     */\n    setTerrain: 'setTerrain',\n\n    /*\n     *  { command: 'setFog', args: [fogProperties] }\n     */\n    setFog: 'setFog',\n\n    /*\n     *  { command: 'setProjection', args: [projectionProperties] }\n     */\n    setProjection: 'setProjection'\n};\n\nfunction addSource(sourceId, after, commands) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved, differ) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            differ.changeSource(sourceId, {command: 'removeSource'})\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n\n        // add sources\n        if (!before.hasOwnProperty(sourceId)) {\n            differ.changeSource(sourceId, {command: 'addSource'})\n            addSource(sourceId, after, commands);\n        } \n        // update sources\n        else if (!isEqual(before[sourceId], after[sourceId])) {\n            differ.changeSource(sourceId, {command: 'updateSource'})\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command, differ) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n        \tconst cmd = {command, args: [prop, after[prop], before[prop],klass], layer: layerId};\n            commands.push(cmd);\n            differ.changeLayerProp(layerId, cmd)\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n        \tconst cmd = {command, args: [prop, after[prop], before[prop],klass], layer: layerId};\n            commands.push(cmd);\n            differ.changeLayerProp(layerId, cmd)\n        }\n    }\n}\n\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before, after, commands, differ) {\n    before = before || [];\n    after = after || [];\n\t\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        // detect removed layer\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n        \tdiffer.changeLayer(layerId, {command:'removeLayer'})\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n        var movingLayer = false;\n        if (beforeIndex.hasOwnProperty(layerId)) {\n        \tmovingLayer = true;\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n\n        if (movingLayer) differ.changeLayer(layerId, {command: 'moveLayer', args: [insertBeforeLayerId]})\n        else {\n\t        clean[layerId] = true;\n        \tdiffer.changeLayer(layerId, {command:'addLayer', args: [afterIndex[layerId], insertBeforeLayerId]})\n        }\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty, differ);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty, differ);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n        \tconst cmd = {command: operations.setFilter, args: ['filter', JSON.stringify(afterLayer.filter), beforeLayer.filter], layer: layerId};\n            commands.push(cmd);\n            differ.changeLayerProp(layerId, cmd)\n        }\n\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom)) {\n        \tconst cmd = {command: operations.setLayerZoomRange, args: ['minzoom', afterLayer.minzoom, beforeLayer.minzoom], layer: layerId};\n            commands.push(cmd);\n            differ.changeLayerProp(layerId, cmd)\n        }\n        if (!isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n        \tconst cmd = {command: operations.setLayerZoomRange, args: ['maxzoom', afterLayer.maxzoom, beforeLayer.maxzoom], layer: layerId};\n            commands.push(cmd);\n            differ.changeLayerProp(layerId, cmd)\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty, differ);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n            \tconst cmd = {command: operations.setLayerProperty, args: [prop, afterLayer[prop], beforeLayer[prop]], layer: layerId}\n                commands.push(cmd);\n\t            differ.changeLayerProp(layerId, cmd)\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n            \tconst cmd = {command: operations.setLayerProperty, args: [prop, afterLayer[prop], beforeLayer[prop]], layer: layerId};\n                commands.push(cmd);\n                differ.changeLayerProp(layerId, cmd)\n            }\n        }\n    }\n\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStyles(before, after) {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n    const differ = new diffTracker();\n\n    let commands = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n        if (!isEqual(before.fog, after.fog)) {\n            commands.push({command: operations.setFog, args: [after.fog]});\n        }\n        if (!isEqual(before.projection, after.projection)) {\n            commands.push({command: operations.setProjection, args: [after.projection]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved, differ);\n\n\n        // Remove the terrain if the source for that terrain is being removed\n        // let beforeTerrain = before.terrain;\n        // if (beforeTerrain) {\n        //     if (sourcesRemoved[beforeTerrain.source]) {\n        //         commands.push({command: operations.setTerrain, args: [undefined]});\n        //         beforeTerrain = undefined;\n        //     }\n        // }\n\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Even though terrain is a top-level property\n        // Its like a layer in the sense that it depends on a source being present.\n        // if (!isEqual(beforeTerrain, after.terrain)) {\n        //     commands.push({command: operations.setTerrain, args: [after.terrain]});\n        // }\n\n\n        // Handle changes to `layers`\n        diffLayers(before.layers, after.layers, commands, differ);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    commands = detectMovedLayers(commands);\n    console.log(differ)\n    return differ;\n}\n\n\nfunction detectMovedLayers(commands) {\n\n\tvar output = [];\n\tvar blacklistAdds = [];\n\n\tfunction findReaddedLayer(removalCommand) {\n\t\tconst targetId = removalCommand.args[0];\n\t\tconst match = commands.find(l=>l.args?.[0]?.id===targetId)\n\t\tif (match) {blacklistAdds.push(targetId)}\n\t\treturn match\n\t}\n\n\tcommands.forEach(c=>{\n\t\tif (c.command === 'removeLayer') {\n\t\t\tconst readded = findReaddedLayer(c);\n\t\t\tif (readded) { \n\t\t\t\toutput.push({command:'moveLayer', args:readded.args});\n\t\t\t}\n\t\t\telse output.push(c)\n\t\t}\n\t\telse if (c.command !== 'addLayer' || !blacklistAdds.includes(c.args[0])) output.push(c)\n\n\t})\n\n\treturn output\n}\n\nexport default diffStyles;"],"names":[],"version":3,"file":"main.js.map"}