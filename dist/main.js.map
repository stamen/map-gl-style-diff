{"mappings":"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","sources":["src/index.js","src/lib/diff.js"],"sourcesContent":["import { diff } from \"./lib/diff\";\n\nexport { diff };\n","const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nclass diffTracker {\n  constructor() {\n    this.sources = [];\n    this.layers = [];\n    this.layerProps = {};\n  }\n\n  changeSource(source, change) {\n    this.sources.push({ source: source, change: change });\n  }\n\n  changeLayer(layer, change) {\n    this.layers.push({ layer: layer, change: change });\n  }\n\n  changeLayerProp(layer, change) {\n    if (!this.layerProps[layer]) this.layerProps[layer] = [change];\n    else this.layerProps[layer].push(change);\n  }\n}\nconst operations = {\n  /*\n   * { command: 'setStyle', args: [stylesheet] }\n   */\n  setStyle: 'setStyle',\n\n  /*\n   * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n   */\n  addLayer: 'addLayer',\n\n  /*\n   * { command: 'removeLayer', args: ['layerId'] }\n   */\n  removeLayer: 'removeLayer',\n\n  moveLayer: 'moveLayer',\n\n  /*\n   * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n   */\n  setPaintProperty: 'setPaintProperty',\n\n  /*\n   * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n   */\n  setLayoutProperty: 'setLayoutProperty',\n\n  /*\n   * { command: 'setFilter', args: ['layerId', filter] }\n   */\n  setFilter: 'setFilter',\n\n  /*\n   * { command: 'addSource', args: ['sourceId', source] }\n   */\n  addSource: 'addSource',\n\n  /*\n   * { command: 'removeSource', args: ['sourceId'] }\n   */\n  removeSource: 'removeSource',\n\n  /*\n   * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n   */\n  setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n  /*\n   * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n   */\n  setLayerZoomRange: 'setLayerZoomRange',\n\n  /*\n   * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n   */\n  setLayerProperty: 'setLayerProperty',\n\n  /*\n   * { command: 'setCenter', args: [[lon, lat]] }\n   */\n  setCenter: 'setCenter',\n\n  /*\n   * { command: 'setZoom', args: [zoom] }\n   */\n  setZoom: 'setZoom',\n\n  /*\n   * { command: 'setBearing', args: [bearing] }\n   */\n  setBearing: 'setBearing',\n\n  /*\n   * { command: 'setPitch', args: [pitch] }\n   */\n  setPitch: 'setPitch',\n\n  /*\n   * { command: 'setSprite', args: ['spriteUrl'] }\n   */\n  setSprite: 'setSprite',\n\n  /*\n   * { command: 'setGlyphs', args: ['glyphsUrl'] }\n   */\n  setGlyphs: 'setGlyphs',\n\n  /*\n   * { command: 'setTransition', args: [transition] }\n   */\n  setTransition: 'setTransition',\n\n  /*\n   * { command: 'setLighting', args: [lightProperties] }\n   */\n  setLight: 'setLight',\n\n  /*\n   * { command: 'setTerrain', args: [terrainProperties] }\n   */\n  setTerrain: 'setTerrain',\n\n  /*\n   *  { command: 'setFog', args: [fogProperties] }\n   */\n  setFog: 'setFog',\n\n  /*\n   *  { command: 'setProjection', args: [projectionProperties] }\n   */\n  setProjection: 'setProjection'\n};\n\nfunction addSource(sourceId, after, commands) {\n  commands.push({\n    command: operations.addSource,\n    args: [sourceId, after[sourceId]]\n  });\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n  commands.push({ command: operations.removeSource, args: [sourceId] });\n  sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n  removeSource(sourceId, commands, sourcesRemoved);\n  addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n  let prop;\n  for (prop in before[sourceId]) {\n    if (!before[sourceId].hasOwnProperty(prop)) continue;\n    if (\n      prop !== 'data' &&\n      !isEqual(before[sourceId][prop], after[sourceId][prop])\n    ) {\n      return false;\n    }\n  }\n  for (prop in after[sourceId]) {\n    if (!after[sourceId].hasOwnProperty(prop)) continue;\n    if (\n      prop !== 'data' &&\n      !isEqual(before[sourceId][prop], after[sourceId][prop])\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved, differ) {\n  before = before || {};\n  after = after || {};\n\n  let sourceId;\n\n  // look for sources to remove\n  for (sourceId in before) {\n    if (!before.hasOwnProperty(sourceId)) continue;\n    if (!after.hasOwnProperty(sourceId)) {\n      differ.changeSource(sourceId, { command: 'removeSource' });\n      removeSource(sourceId, commands, sourcesRemoved);\n    }\n  }\n\n  // look for sources to add/update\n  for (sourceId in after) {\n    if (!after.hasOwnProperty(sourceId)) continue;\n\n    // add sources\n    if (!before.hasOwnProperty(sourceId)) {\n      differ.changeSource(sourceId, { command: 'addSource' });\n      addSource(sourceId, after, commands);\n    }\n    // update sources\n    else if (!isEqual(before[sourceId], after[sourceId])) {\n      differ.changeSource(sourceId, { command: 'updateSource' });\n      if (\n        before[sourceId].type === 'geojson' &&\n        after[sourceId].type === 'geojson' &&\n        canUpdateGeoJSON(before, after, sourceId)\n      ) {\n        commands.push({\n          command: operations.setGeoJSONSourceData,\n          args: [sourceId, after[sourceId].data]\n        });\n      } else {\n        // no update command, must remove then add\n        updateSource(sourceId, after, commands, sourcesRemoved);\n      }\n    }\n  }\n}\n\nfunction diffLayerPropertyChanges(\n  before,\n  after,\n  commands,\n  layerId,\n  klass,\n  command,\n  differ\n) {\n  before = before || {};\n  after = after || {};\n\n  let prop;\n\n  for (prop in before) {\n    if (!before.hasOwnProperty(prop)) continue;\n    if (!isEqual(before[prop], after[prop])) {\n      const cmd = {\n        command,\n        args: [prop, after[prop], before[prop], klass],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n  }\n  for (prop in after) {\n    if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n    if (!isEqual(before[prop], after[prop])) {\n      const cmd = {\n        command,\n        args: [prop, after[prop], before[prop], klass],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n  }\n}\n\nfunction pluckId(layer) {\n  return layer.id;\n}\nfunction indexById(group, layer) {\n  group[layer.id] = layer;\n  return group;\n}\n\nfunction diffLayers(before, after, commands, differ) {\n  before = before || [];\n  after = after || [];\n\n  // order of layers by id\n  const beforeOrder = before.map(pluckId);\n  const afterOrder = after.map(pluckId);\n\n  // index of layer by id\n  const beforeIndex = before.reduce(indexById, {});\n  const afterIndex = after.reduce(indexById, {});\n\n  // track order of layers as if they have been mutated\n  const tracker = beforeOrder.slice();\n\n  // layers that have been added do not need to be diffed\n  const clean = Object.create(null);\n\n  let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n  // remove layers\n  for (i = 0, d = 0; i < beforeOrder.length; i++) {\n    layerId = beforeOrder[i];\n    // detect removed layer\n    if (!afterIndex.hasOwnProperty(layerId)) {\n      commands.push({ command: operations.removeLayer, args: [layerId] });\n      differ.changeLayer(layerId, { command: 'removeLayer' });\n      tracker.splice(tracker.indexOf(layerId, d), 1);\n    } else {\n      // limit where in tracker we need to look for a match\n      d++;\n    }\n  }\n\n  // add/reorder layers\n  for (i = 0, d = 0; i < afterOrder.length; i++) {\n    // work backwards as insert is before an existing layer\n    layerId = afterOrder[afterOrder.length - 1 - i];\n\n    if (tracker[tracker.length - 1 - i] === layerId) continue;\n    var movingLayer = false;\n    if (beforeIndex.hasOwnProperty(layerId)) {\n      movingLayer = true;\n      // remove the layer before we insert at the correct position\n      commands.push({ command: operations.removeLayer, args: [layerId] });\n      tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n    } else {\n      // limit where in tracker we need to look for a match\n      d++;\n    }\n\n    // add layer at correct position\n    insertBeforeLayerId = tracker[tracker.length - i];\n    commands.push({\n      command: operations.addLayer,\n      args: [afterIndex[layerId], insertBeforeLayerId]\n    });\n    tracker.splice(tracker.length - i, 0, layerId);\n\n    if (movingLayer)\n      differ.changeLayer(layerId, {\n        command: 'moveLayer',\n        args: [insertBeforeLayerId]\n      });\n    else {\n      clean[layerId] = true;\n      differ.changeLayer(layerId, {\n        command: 'addLayer',\n        args: [afterIndex[layerId], insertBeforeLayerId]\n      });\n    }\n  }\n\n  // update layers\n  for (i = 0; i < afterOrder.length; i++) {\n    layerId = afterOrder[i];\n    beforeLayer = beforeIndex[layerId];\n    afterLayer = afterIndex[layerId];\n\n    // no need to update if previously added (new or moved)\n    if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n    // layout, paint, filter, minzoom, maxzoom\n    diffLayerPropertyChanges(\n      beforeLayer.layout,\n      afterLayer.layout,\n      commands,\n      layerId,\n      null,\n      operations.setLayoutProperty,\n      differ\n    );\n    diffLayerPropertyChanges(\n      beforeLayer.paint,\n      afterLayer.paint,\n      commands,\n      layerId,\n      null,\n      operations.setPaintProperty,\n      differ\n    );\n    if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n      const cmd = {\n        command: operations.setFilter,\n        args: ['filter', JSON.stringify(afterLayer.filter), beforeLayer.filter],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n\n    if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom)) {\n      const cmd = {\n        command: operations.setLayerZoomRange,\n        args: ['minzoom', afterLayer.minzoom, beforeLayer.minzoom],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n    if (!isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n      const cmd = {\n        command: operations.setLayerZoomRange,\n        args: ['maxzoom', afterLayer.maxzoom, beforeLayer.maxzoom],\n        layer: layerId\n      };\n      commands.push(cmd);\n      differ.changeLayerProp(layerId, cmd);\n    }\n\n    // handle all other layer props, including paint.*\n    for (prop in beforeLayer) {\n      if (!beforeLayer.hasOwnProperty(prop)) continue;\n      if (\n        prop === 'layout' ||\n        prop === 'paint' ||\n        prop === 'filter' ||\n        prop === 'metadata' ||\n        prop === 'minzoom' ||\n        prop === 'maxzoom'\n      )\n        continue;\n      if (prop.indexOf('paint.') === 0) {\n        diffLayerPropertyChanges(\n          beforeLayer[prop],\n          afterLayer[prop],\n          commands,\n          layerId,\n          prop.slice(6),\n          operations.setPaintProperty,\n          differ\n        );\n      } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n        const cmd = {\n          command: operations.setLayerProperty,\n          args: [prop, afterLayer[prop], beforeLayer[prop]],\n          layer: layerId\n        };\n        commands.push(cmd);\n        differ.changeLayerProp(layerId, cmd);\n      }\n    }\n    for (prop in afterLayer) {\n      if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop))\n        continue;\n      if (\n        prop === 'layout' ||\n        prop === 'paint' ||\n        prop === 'filter' ||\n        prop === 'metadata' ||\n        prop === 'minzoom' ||\n        prop === 'maxzoom'\n      )\n        continue;\n      if (prop.indexOf('paint.') === 0) {\n        diffLayerPropertyChanges(\n          beforeLayer[prop],\n          afterLayer[prop],\n          commands,\n          layerId,\n          prop.slice(6),\n          operations.setPaintProperty\n        );\n      } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n        const cmd = {\n          command: operations.setLayerProperty,\n          args: [prop, afterLayer[prop], beforeLayer[prop]],\n          layer: layerId\n        };\n        commands.push(cmd);\n        differ.changeLayerProp(layerId, cmd);\n      }\n    }\n  }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStylesSetStyle(before, after) {\n  if (!before) return [{ command: operations.setStyle, args: [after] }];\n  const differ = new diffTracker();\n\n  let commands = [];\n\n  try {\n    // Handle changes to top-level properties\n    if (!isEqual(before.version, after.version)) {\n      return [{ command: operations.setStyle, args: [after] }];\n    }\n    if (!isEqual(before.center, after.center)) {\n      commands.push({ command: operations.setCenter, args: [after.center] });\n    }\n    if (!isEqual(before.zoom, after.zoom)) {\n      commands.push({ command: operations.setZoom, args: [after.zoom] });\n    }\n    if (!isEqual(before.bearing, after.bearing)) {\n      commands.push({ command: operations.setBearing, args: [after.bearing] });\n    }\n    if (!isEqual(before.pitch, after.pitch)) {\n      commands.push({ command: operations.setPitch, args: [after.pitch] });\n    }\n    if (!isEqual(before.sprite, after.sprite)) {\n      commands.push({ command: operations.setSprite, args: [after.sprite] });\n    }\n    if (!isEqual(before.glyphs, after.glyphs)) {\n      commands.push({ command: operations.setGlyphs, args: [after.glyphs] });\n    }\n    if (!isEqual(before.transition, after.transition)) {\n      commands.push({\n        command: operations.setTransition,\n        args: [after.transition]\n      });\n    }\n    if (!isEqual(before.light, after.light)) {\n      commands.push({ command: operations.setLight, args: [after.light] });\n    }\n    if (!isEqual(before.fog, after.fog)) {\n      commands.push({ command: operations.setFog, args: [after.fog] });\n    }\n    if (!isEqual(before.projection, after.projection)) {\n      commands.push({\n        command: operations.setProjection,\n        args: [after.projection]\n      });\n    }\n\n    // Handle changes to `sources`\n    // If a source is to be removed, we also--before the removeSource\n    // command--need to remove all the style layers that depend on it.\n    const sourcesRemoved = {};\n\n    // First collect the {add,remove}Source commands\n    const removeOrAddSourceCommands = [];\n    diffSources(\n      before.sources,\n      after.sources,\n      removeOrAddSourceCommands,\n      sourcesRemoved,\n      differ\n    );\n\n    commands = commands.concat(removeOrAddSourceCommands);\n\n    // Handle changes to `layers`\n    diffLayers(before.layers, after.layers, commands, differ);\n  } catch (e) {\n    // fall back to setStyle\n    console.warn('Unable to compute style diff:', e);\n    commands = [{ command: operations.setStyle, args: [after] }];\n  }\n\n  commands = detectMovedLayers(commands);\n  return differ;\n}\n\nfunction detectMovedLayers(commands) {\n  var output = [];\n  var blacklistAdds = [];\n\n  function findReaddedLayer(removalCommand) {\n    const targetId = removalCommand.args[0];\n    const match = commands.find(l => l.args?.[0]?.id === targetId);\n    if (match) {\n      blacklistAdds.push(targetId);\n    }\n    return match;\n  }\n\n  commands.forEach(c => {\n    if (c.command === 'removeLayer') {\n      const readded = findReaddedLayer(c);\n      if (readded) {\n        output.push({ command: 'moveLayer', args: readded.args });\n      } else output.push(c);\n    } else if (c.command !== 'addLayer' || !blacklistAdds.includes(c.args[0]))\n      output.push(c);\n  });\n\n  return output;\n}\n\n// Added this function to change the output format to be more helpful\nconst diffStyles = (before, after) => {\n  const originalDiff = diffStylesSetStyle(before, after);\n\n  const { layerProps, layers, sources } = originalDiff;\n\n  // formatting for source additions and removals\n  const nextSources = sources.reduce((acc, s) => {\n    const { change, source } = s;\n\n    let type = change.command;\n\n    switch (type) {\n      case 'removeSource': {\n        type = 'remove';\n        break;\n      }\n      case 'addSource': {\n        type = 'add';\n        break;\n      }\n    }\n\n    acc[source] = type;\n\n    return acc;\n  }, {});\n\n  // formatting for layer additions, reorders, and removals\n  const nextLayers = layers.reduce((acc, l) => {\n    const { change, layer } = l;\n\n    let type = change.command;\n\n    switch (type) {\n      case 'removeLayer': {\n        type = 'remove';\n        break;\n      }\n      case 'addLayer': {\n        type = 'add';\n        break;\n      }\n      case 'moveLayer': {\n        type = 'move';\n        break;\n      }\n    }\n\n    acc[layer] = {\n      type,\n      ...(type === 'add' && {\n        layer: change?.args[0],\n        layerAbove: change?.args[1]\n      }),\n      ...(type === 'move' && { layerAbove: change?.args[0] })\n    };\n\n    return acc;\n  }, {});\n\n  // formatting for layer property changes\n  const nextLayerProps = Object.keys(layerProps).reduce((acc, layerId) => {\n    const nextLayerChanges = layerProps[layerId].reduce((accum, change) => {\n      const { command, args } = change;\n\n      let type = command;\n\n      switch (command) {\n        case 'setFilter': {\n          type = 'filter';\n          break;\n        }\n        // source & source-layer\n        case 'setLayerProperty': {\n          type = 'root';\n          break;\n        }\n        case 'setPaintProperty': {\n          type = 'paint';\n          break;\n        }\n        // min and max zoom\n        case 'setLayerZoomRange': {\n          type = 'minMaxZoom';\n          break;\n        }\n        case 'setLayoutProperty': {\n          type = 'layout';\n          break;\n        }\n      }\n\n      const [propertyId, currentValue, compareValue] = args;\n\n      // These are reversed out of the set style version of the diffing tool\n      const current = compareValue;\n      const compare = currentValue;\n\n      if (type === 'root' || type === 'minMaxZoom') {\n        accum[propertyId] = {\n          current,\n          compare\n        };\n      } else if (type === 'filter') {\n        accum[propertyId] = {\n          current,\n          // Not sure why this is stringified\n          compare: typeof compare === 'string' ? JSON.parse(compare) : compare\n        };\n      } else {\n        if (!accum[type]) {\n          accum[type] = {};\n        }\n        accum[type][propertyId] = {\n          current,\n          compare\n        };\n      }\n\n      return accum;\n    }, {});\n\n    acc[layerId] = nextLayerChanges;\n\n    return acc;\n  }, {});\n\n  return {\n    layerProps: nextLayerProps,\n    layers: nextLayers,\n    sources: nextSources\n  };\n};\n\nexport const diff = diffStyles;\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}